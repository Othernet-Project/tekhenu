@import "compass/css3";

@mixin at-hdpi() {
  @media
  only screen and (-webkit-min-device-pixel-ratio: 1.3),
  only screen and (min-resolution: 120dpi),
  only screen and (min-resolution: 1.3dppx) { 
    @content;
  }
}

@mixin with-hdpi($image, $include-size: no, $extension: png) {
  $filename: "#{$image}.#{$extension}";
  $filename2x: "#{$image}_2x.#{$extension}";
  $width: image-width($filename);
  $height: image-height($filename);

  background-image: image-url($filename);

  @if $include-size == yes {
    width: $width;
    height: $height;
  }
  
  @include at-hdpi {
    background-image: image-url($filename2x);
    @include background-size($width, $height);
  }
}

@mixin with-hdpi-fake($image, $extension: png) {
  $image: "#{$image}.#{$extension}";
  $width: image-width($image);
  $height: image-height($image);
  background-image: image-url($image);
  width: $width;
  height: $height;

  @incude at-hdpi {
    width: $width / 2;
    height: $height / 2;
    @include background-size($width / 2, $height / 2);
  }
}

@mixin half-size($image, $extension: png) {
  $image: "#{$image}.#{$extension}";
  $width: image-width($image);
  $height: image-height($image);

  width: $width / 2;
  height: $height / 2;
  @include background-size($width / 2, $height / 2);
}

@function dx-transform($name) {
  @return #{"progid:DXImageTransform.Microsoft."}#{$name};
}

@function dx-gradient($start-color, $end-color, $orientation: vertical) {
  $gradient-type: if($orientation == vertical, 0, 1);
  @return #{dx-transform(gradient)}#{'(gradientType='}#{$gradient-type}#{", startColorstr='"}#{ie-hex-str($start-color)}#{"', endColorstr='"}#{ie-hex-str($end-color)}#{"')"};
}

@function dx-image($image, $method: crop) {
  @return #{dx-transform(AlphaImageLoader)}#{'(src='}#{$image}#{', sizingMethod='}#{$method}#{")"};
}
